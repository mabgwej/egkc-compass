name: Prod CICD 

on:
  schedule:
    - cron: "0 9 * * *"  
  workflow_dispatch:

jobs:
  Extract_branch: 
    uses: albertsons/esgh-central-workflow-aks/.github/workflows/extractbranch.yml@v3
  call-ci-workflow:
    needs: [Extract_branch]
    uses: albertsons/esgh-central-workflow-aks/.github/workflows/oneclick-node-ci-prod.yml@v4
    with:
      ACTIONSFILE: "Actionsfile/prod"
      TAG: ${{ github.ref_name }}-${{ github.run_number }}
      branch_name: "${{ needs.Extract_branch.outputs.branch_name }}"
      VERACODE_APPNAME: dxinaz-wms-upload-ui
      tar_command: tar -czvf node_modules.tar.gz node_modules
      npm_sonar_command: npm install && npm run test && npm run coverage 
      npm_install_command: npm install && npm run build
      untar_command: tar -xvzf node_modules.tar.gz
      npm_build_command: npm install && npm run build
      node_version: 18
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      TL_USERNAME: ${{ secrets.TL_USERNAME }}
      TL_PASSWORD: ${{ secrets.TL_PASSWORD }}
      REGISTRY_USER: ${{ secrets.ACR_USER }}
      REGISTRY_PWD: ${{ secrets.ACR_PWD }} 
      VERACODEID: ${{ secrets.VERACODEID }}
      VERACODEKEY: ${{ secrets.VERACODEKEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      SONAR_CONTINUEONERROR_PROD: ${{ secrets.SONAR_CONTINUEONERROR_PROD }}

  prod-deploy:
    needs: [call-ci-workflow]  
    uses: albertsons/esgh-central-workflow-aks/.github/workflows/oneclick-deploy-prod.yml@v3
    with:
      ACTIONSFILE: "Actionsfile/prod"
      TAG: ${{ github.ref_name }}-${{ github.run_number }}
    secrets:
      REGISTRY_USER: ${{ secrets.ACR_USER }}
      REGISTRY_PWD: ${{ secrets.ACR_PWD }}
      KUBECONFIG: ${{ secrets.ESCO_AKSSHARED_PROD_WESTUS_CLUSTER_01 }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  Deploy-Status-check-prod:
    needs: [ prod-deploy ]
    if: success()
    uses: albertsons/esgh-central-workflow-aks/.github/workflows/Deploy-Status-check.yml@v4
    with:
      ACTIONSFILE: "Actionsfile/prod"
    secrets:
      KUBECONFIG: ${{ secrets.ESCO_AKSSHARED_PROD_WESTUS_CLUSTER_01 }}
      PERSONAL_ACCESS_TOKEN : ${{ secrets.PERSONAL_ACCESS_TOKEN }}
